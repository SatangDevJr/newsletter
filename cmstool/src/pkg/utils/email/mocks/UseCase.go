// Code generated by mockery v2.32.4. DO NOT EDIT.

package mocks

import (
	email "subscribetool/src/pkg/utils/email"

	mock "github.com/stretchr/testify/mock"
)

// UseCase is an autogenerated mock type for the UseCase type
type UseCase struct {
	mock.Mock
}

// Send provides a mock function with given fields: sentMailContent
func (_m *UseCase) Send(sentMailContent email.SentMailContent) error {
	ret := _m.Called(sentMailContent)

	var r0 error
	if rf, ok := ret.Get(0).(func(email.SentMailContent) error); ok {
		r0 = rf(sentMailContent)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewUseCase creates a new instance of UseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUseCase(t interface {
	mock.TestingT
	Cleanup(func())
}) *UseCase {
	mock := &UseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
